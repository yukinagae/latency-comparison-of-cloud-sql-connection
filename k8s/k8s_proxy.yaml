apiVersion: apps/v1
kind: Deployment
metadata:
  name: test
  labels:
    app: test
spec:
  selector:
    matchLabels:
      app: test
  template:
    metadata:
      labels:
        app: test
    spec:
      containers:
        - name: flask-api
          image: gcr.io/yukinagae-sql-proxy-test/flask-api:latest
          ports:
            - containerPort: 5000
          env:
            - name: DB_USER
              value: proxyuser
          livenessProbe:
            httpGet:
              path: /liveness
              port: 5000
            initialDelaySeconds: 3
            periodSeconds: 1
          readinessProbe:
            httpGet:
              path: /readiness
              port: 5000
            initialDelaySeconds: 3
            periodSeconds: 1
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.14
          command:
            [
              "/cloud_sql_proxy",
              "-instances=yukinagae-sql-proxy-test:us-central1:yukinagae-11acd850bc3133db=tcp:3306",
              "-credential_file=/secrets/cloudsql/credentials.json",
            ]
          securityContext:
            runAsUser: 2 # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: test
  labels:
    app: test
spec:
  selector:
    app: test
  ports:
    - port: 80
      targetPort: 5000
  type: LoadBalancer
